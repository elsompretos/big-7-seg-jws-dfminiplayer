/* 
 
Power    33441975
Repeat   33446055
Mute     33454215
Photo    33456255
Music    33439935
Movie    33472575
Stop     33431775
Setup    33444015  masuk mode2 edit tanggal
Mode     33486855  keluar mode2 edit tanggal
VOL+     33435855  mode2: tambah tahun
VOL-     33423615  mode2: kurang tahun
Enter    33427695  masuk jadwal sholat
Up       33464415  mode0: + jam     mode2: + tanggal
Down     33478695  mode0: - jam     mode2: - tanggal
Left     33480735  mode0: - menit   mode2: - bulan
Right    33460335  mode0: + menit   mode2: + bulan
>||      33448095
<<       33468495
>>       33484815
|<<      33452175
>>|      33462375

04:32 04:42 05:58 06:19 12:05 15:10 18:10 19:19

ATMEGA328PB
Global variables use 1019 bytes (49%) of dynamic memory, leaving 1029 bytes for local variables. Maximum is 2048 bytes.

ATMEGA328P
Global variables use 924 bytes (45%) of dynamic memory, leaving 1124 bytes for local variables. Maximum is 2048 bytes.

21 - 32 = 1 - 12
33      = buat setengah jam

*/

#include <Wire.h>
#include "RTClib.h"
#include <IRremote.h>
#include <EEPROM.h>

#include<SoftwareSerial.h>
#include<DFPlayer_Mini_Mp3.h>

#include <SholahTimeCalulation.h>
 
RTC_DS3231 rtc;
 
int jam, menit, detik, tahun, bulan, tanggal, thn;
String waktu_sbh, waktu_dzr,  waktu_ims, waktu_tbt, waktu_dhu, waktu_asr, waktu_mgr, waktu_isy; // jss;
int mode = 0, ash, bsh, csh, dsh, sekarang;
byte evt_0 = 0, evt_1 = 1, evt_2 = 1, evt_3 = 1, evt_4 = 1;
 
int buz = 5;
int seco1 = 10;
int seco2 = 11;
 
int IR_Recv = 12;   //IR Receiver Pin D12
IRrecv irrecv(IR_Recv);
decode_results results;
 
int satuanjam, satuanmenit, satuandetik, puluhanjam, puluhanmenit, puluhandetik;
int satuantanggal, satuanbulan, satuantahun, puluhantanggal, puluhanbulan, puluhantahun;
 
const int latchPin = 3;  // Pin connected to Pin 12 of 74HC595 (Latch)
const int dataPin  = 2;  // Pin connected to Pin 14 of 74HC595 (Data)
const int clockPin = 4;  // Pin connected to Pin 11 of 74HC595 (Clock)

String cck, txhh, txmm;
int wkt_msk_skrg;
int jam_sol, mnt_sol;
 
// space  10 = 0
// t      11 = 120
// d      12 = 94
// a      13 = 95
// m1     14 = 51
// m2     15 = 39

int dec[16] = {63/*0*/,6/*1*/,91/*2*/,79/*3*/,102/*4*/,109/*5*/,125/*6*/,7/*7*/,127/*8*/,111/*9*/,0/*10*/,120/*11 t*/,94/*12 d*/,95/*13 a*/,51/*14 m1*/,39/*15 m2*/}; //ca
 
int display_number1, display_number2, display_number3, display_number4, display_number5, display_number6;
int display_tanggal1, display_tanggal2, display_tanggal3, display_tanggal4, display_tanggal5, display_tanggal6;
 
unsigned long previousMillis_detik=0;
unsigned long previousMillis_tanggal=0;
unsigned long previousMillis_edit_tanggal=0;
unsigned long previousMillis_waktu_sholat=0;
unsigned long previousMillis_waktu_masuk=0;
 
void setup() {
 
  Wire.begin();
  Serial.begin(9600);
  
  // =======================
  // ==== DFPlayer Mini ====
  // =======================

  mp3_set_serial (Serial);  //set Serial for DFPlayer-mini mp3 module
  mp3_set_volume (20);
  mp3_play (16); // Selamat Datang di JWS Versi 1.0
  
  // ==================
  // ==== InfraRed ====
  // ==================
  rtc.begin();
  irrecv.enableIRIn();
   
  pinMode(latchPin, OUTPUT);
  pinMode(clockPin, OUTPUT);
  pinMode(dataPin, OUTPUT);
   
  pinMode(seco1, OUTPUT);
  pinMode(seco2, OUTPUT);
   
  digitalWrite(seco2, HIGH);

  
  //DDRD |= (1<<DDD2) ;//pin 10 is in output mode

  for (int dd = 0; dd < 6; dd++){
    if (dd % 2 == 0){
      digitalWrite(buz,HIGH);
      // PORTD |=(1<< PORTD2);
    }
    else 
    {
      digitalWrite(buz,LOW);
      // PORTD &= ~(1<<PORTD2);
    }
    delay(250);
  }
   
//  beep();
//  delay(50);
//  beep();
//  delay(500);
 
}
 
void loop() {
  
  waktu();

  if (irrecv.decode(&results)) { 

      // ========= masuk mode edit tanggal (ENTER) =========
      if(results.value == 33427695) { 
        ash = 0; bsh = 0;
        mode = 3; // masuk mode edit tanggal
      } 
    
      // ========= masuk mode edit tanggal (SETUP) =========
      if(results.value == 33444015) { 
        ash = 0; bsh = 0;
        mode = 2; // masuk mode edit tanggal
      } 

      // ========= keluar mode edit tanggal (MODE) =========
      if(results.value == 33486855) { 
        ash = 0; bsh = 0;
        mode = 0; // masuk mode jam
      } 
      
      // ========= jam & tanggal + (UP) =========
      if(results.value == 33464415) { 
        if(mode == 0 || mode == 1){ // mode jam atau tanggal
          jam++; rtc.adjust(DateTime(tahun, bulan, tanggal, jam, menit, 0));
          if (jam >= 24) {  jam = 0;  rtc.adjust(DateTime(tahun, bulan, tanggal, jam, menit, 0)); } 
        }
        else if(mode == 2){ // mode edit tanggal
          tanggal++; rtc.adjust(DateTime(tahun, bulan, tanggal, jam, menit, detik));
          if (tanggal > 31) {  tanggal = 1;  rtc.adjust(DateTime(tahun, bulan, tanggal, jam, menit, detik)); } 
        }
      } 

      // ========= jam & tanggal - (DOWN)=========
      if(results.value == 33478695) { 
        if(mode == 0 || mode == 1){ // mode jam atau tanggal
          jam--; rtc.adjust(DateTime(tahun, bulan, tanggal, jam, menit, 0));
          if (jam < 0) { jam = 23; rtc.adjust(DateTime(tahun, bulan, tanggal, jam, menit, 0)); }
        }
        else if(mode == 2){ // mode edit tanggal
          tanggal--; rtc.adjust(DateTime(tahun, bulan, tanggal, jam, menit, detik));
          if (tanggal < 1) {  tanggal = 31;  rtc.adjust(DateTime(tahun, bulan, tanggal, jam, menit, detik)); }  
        }
      } 

       // ========= menit & bulan  + (RIGHT) =========
      if(results.value == 33460335) { 
        if(mode == 0 || mode == 1){ // mode jam atau tanggal
          menit++; rtc.adjust(DateTime(tahun, bulan, tanggal, jam, menit, 0));
          if (menit >= 60) {  menit = 0;  rtc.adjust(DateTime(tahun, bulan, tanggal, jam, menit, 0)); } 
        }
        else if(mode == 2){ // mode edit tanggal
          bulan++; rtc.adjust(DateTime(tahun, bulan, tanggal, jam, menit, detik));
          if (bulan > 12) {  bulan = 1;  rtc.adjust(DateTime(tahun, bulan, tanggal, jam, menit, detik)); } 
        }
      } 

      // ========= menit & bulan - (LEFT)=========
      if(results.value == 33480735) {
        if(mode == 0 || mode == 1){ // mode jam atau tanggal
          menit--; rtc.adjust(DateTime(tahun, bulan, tanggal, jam, menit, 0));
          if (menit < 0) { menit = 59; rtc.adjust(DateTime(tahun, bulan, tanggal, jam, menit, 0)); }
        } 
        else if(mode == 2){ // mode edit tanggal
          bulan--; rtc.adjust(DateTime(tahun, bulan, tanggal, jam, menit, detik));
          if (bulan < 1) {  bulan = 12;  rtc.adjust(DateTime(tahun, bulan, tanggal, jam, menit, detik)); }  
        }
      } 

      // ========= tahun + (VOL+)=========
      if(results.value == 33435855) {
        if(mode == 2){ // mode edit tanggal
          tahun++; rtc.adjust(DateTime(tahun, bulan, tanggal, jam, menit, detik));
        }
      }

      // ========= tahun - (VOL-)=========
      if(results.value == 33423615) {
        if(mode == 2){ // mode edit tanggal
          tahun--; rtc.adjust(DateTime(tahun, bulan, tanggal, jam, menit, detik)); 
        }
      }
      
      irrecv.resume();
  }

  switch (mode) {
    case 0: 
      evt_0 = 0; evt_1 = 1; evt_2 = 1; evt_3 = 1; evt_4 = 1; // evt_5 = 1; evt_6 = 1;
      tampilkan_jam();
    break;

    case 1: 
      evt_0 = 1; evt_1 = 0; evt_2 = 1; evt_3 = 1; evt_4 = 1; // evt_5 = 1; evt_6 = 1;
      tampilkan_tanggal();
    break;

    case 2: 
      evt_0 = 1; evt_1 = 1; evt_2 = 0; evt_3 = 1;  evt_4 = 1; // evt_5 = 1; evt_6 = 1;
      tampilkan_edit_tanggal();
    break;

    case 3: 
      evt_0 = 1; evt_1 = 1; evt_2 = 1; evt_3 = 0;  evt_4 = 1; // evt_5 = 1; evt_6 = 1;
      tampilkan_waktu_sholat();
    break;

    case 4: 
      evt_0 = 1; evt_1 = 1; evt_2 = 1; evt_3 = 1;  evt_4 = 0; // evt_5 = 1; evt_6 = 1;
      tampilkan_waktu_masuk();
    break;
  }
   
}
 
void tampilkan_jam(){
  
  ambilwaktusholat();
  
  if (!evt_0 && (millis()-previousMillis_detik) > 1000) {
  previousMillis_detik = millis();
  
    if(ash < 10){ // 10 Detik
      ash++;
       
      satuanjam = jam % 10;
      puluhanjam = jam / 10;
       
      satuanmenit = menit % 10;
      puluhanmenit = menit / 10;
       
      satuandetik = detik % 10;
      puluhandetik = detik / 10;
       
      display_number1 = dec[puluhanjam];
      display_number2 = dec[satuanjam];
       
      display_number3 = dec[puluhanmenit];
      display_number4 = dec[satuanmenit];
       
      display_number5 = dec[puluhandetik];
      display_number6 = dec[satuandetik];
       
      digitalWrite(latchPin, LOW);
      shiftOut(dataPin, clockPin, MSBFIRST, display_number1);
      shiftOut(dataPin, clockPin, MSBFIRST, display_number2);
      shiftOut(dataPin, clockPin, MSBFIRST, display_number3);
      shiftOut(dataPin, clockPin, MSBFIRST, display_number4);
      shiftOut(dataPin, clockPin, MSBFIRST, display_number5);
      shiftOut(dataPin, clockPin, MSBFIRST, display_number6);
      digitalWrite(latchPin, HIGH);
       
      if (detik % 2 == 0) {
        digitalWrite(seco1, LOW);
        //digitalWrite(seco2, LOW);
      }
      else
      {
       
        digitalWrite(seco1, HIGH);
        //digitalWrite(seco2, HIGH);
       
      }
       
//      Serial.print(puluhanjam);
//      Serial.print(satuanjam);
//      Serial.print(":");
//      Serial.print(puluhanmenit);
//      Serial.print(satuanmenit);
//      Serial.print(":");
//      Serial.print(puluhandetik);
//      Serial.println(satuandetik);
//      Serial.println(jss);
    }
    
    else
    {
      mode = 1;
      ash=0;
    }
  }
}

void tampilkan_tanggal(){
  
  ambilwaktusholat();
  
  if (!evt_1 && (millis()-previousMillis_tanggal) > 1000) {
  previousMillis_tanggal = millis();
  
    if(bsh < 3){ // 3 Detik
      
      bsh++;
      
      thn = (String(tahun).substring(2,4)).toInt();
      
      satuantanggal = tanggal % 10;
      puluhantanggal = tanggal / 10;
       
      satuanbulan = bulan % 10;
      puluhanbulan = bulan / 10;

      satuantahun = thn % 10;
      puluhantahun = thn / 10;

      display_tanggal1 = dec[puluhantanggal];
      display_tanggal2 = dec[satuantanggal];
       
      display_tanggal3 = dec[puluhanbulan];
      display_tanggal4 = dec[satuanbulan];
       
      display_tanggal5 = dec[puluhantahun];
      display_tanggal6 = dec[satuantahun];
       
      digitalWrite(latchPin, LOW);
      shiftOut(dataPin, clockPin, MSBFIRST, display_tanggal1);
      shiftOut(dataPin, clockPin, MSBFIRST, display_tanggal2);
      shiftOut(dataPin, clockPin, MSBFIRST, display_tanggal3);
      shiftOut(dataPin, clockPin, MSBFIRST, display_tanggal4);
      shiftOut(dataPin, clockPin, MSBFIRST, display_tanggal5);
      shiftOut(dataPin, clockPin, MSBFIRST, display_tanggal6);
      digitalWrite(latchPin, HIGH);

      digitalWrite(seco1, LOW);

//      Serial.print(puluhantanggal);
//      Serial.print(satuantanggal);
//      Serial.print("-");
//      Serial.print(puluhanbulan);
//      Serial.print(satuanbulan);
//      Serial.print("-");
//      Serial.print(puluhantahun);
//      Serial.print(satuantahun);
//      Serial.println(" *");
      
    }
    else
    {
      
      mode = 0;
      bsh=0;
      
    }
  }
}

void tampilkan_waktu_sholat(){
  
  ambilwaktusholat();

// int jam_sol, mnt_sol;
  
  if (!evt_3 && (millis()-previousMillis_waktu_sholat) > 1000) {
  previousMillis_waktu_sholat = millis();

// t      11 = 120
// d      12 = 94
// a      13 = 95
// m1     14 = 51
// m2     15 = 39
  
    if(csh < 16){                        //          -  csh < 8
      if(csh < 2){                       // imsak    -  csh < 1
        
        jam_sol = (String(waktu_ims).substring(0,2)).toInt();
        mnt_sol = (String(waktu_ims).substring(3,5)).toInt();

        satuanjam = jam_sol % 10; puluhanjam = jam_sol / 10;
        satuanmenit = mnt_sol % 10; puluhanmenit = mnt_sol / 10;
         
        display_number1 = dec[1]; display_number2 = dec[10];
        display_number3 = dec[puluhanjam]; display_number4 = dec[satuanjam];
        display_number5 = dec[puluhanmenit]; display_number6 = dec[satuanmenit];
         
        digitalWrite(latchPin, LOW);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number1);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number2);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number3);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number4);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number5);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number6);
        digitalWrite(latchPin, HIGH);

        digitalWrite(seco1, HIGH);

//        Serial.print("I"); Serial.print(" "); Serial.print(":"); Serial.print(puluhanjam);
//        Serial.print(satuanjam); Serial.print(":"); Serial.print(puluhanmenit); Serial.println(satuanmenit);
        
      }
      else if (csh > 1 && csh < 4)   {   // subuh    -  csh > 0 && csh < 2
        jam_sol = (String(waktu_sbh).substring(0,2)).toInt();
        mnt_sol = (String(waktu_sbh).substring(3,5)).toInt();

        satuanjam = jam_sol % 10; puluhanjam = jam_sol / 10;
        satuanmenit = mnt_sol % 10; puluhanmenit = mnt_sol / 10;
         
        display_number1 = dec[5]; display_number2 = dec[10];
        display_number3 = dec[puluhanjam]; display_number4 = dec[satuanjam];
        display_number5 = dec[puluhanmenit]; display_number6 = dec[satuanmenit];
         
        digitalWrite(latchPin, LOW);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number1);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number2);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number3);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number4);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number5);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number6);
        digitalWrite(latchPin, HIGH);

        digitalWrite(seco1, HIGH);

//        Serial.print("S"); Serial.print(" "); Serial.print(":"); Serial.print(puluhanjam);
//        Serial.print(satuanjam); Serial.print(":"); Serial.print(puluhanmenit); Serial.println(satuanmenit);
      }
      else if (csh > 3 && csh < 6)   {   // terbit   -  csh > 1 && csh < 3
        jam_sol = (String(waktu_tbt).substring(0,2)).toInt();
        mnt_sol = (String(waktu_tbt).substring(3,5)).toInt();

        satuanjam = jam_sol % 10; puluhanjam = jam_sol / 10;
        satuanmenit = mnt_sol % 10; puluhanmenit = mnt_sol / 10;
         
        display_number1 = dec[11]; display_number2 = dec[10];
        display_number3 = dec[puluhanjam]; display_number4 = dec[satuanjam];
        display_number5 = dec[puluhanmenit]; display_number6 = dec[satuanmenit];
         
        digitalWrite(latchPin, LOW);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number1);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number2);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number3);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number4);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number5);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number6);
        digitalWrite(latchPin, HIGH);

        digitalWrite(seco1, HIGH); 

//        Serial.print("t"); Serial.print(" "); Serial.print(":"); Serial.print(puluhanjam);
//        Serial.print(satuanjam); Serial.print(":"); Serial.print(puluhanmenit); Serial.println(satuanmenit);
      }
      else if (csh > 5 && csh < 8)   {   // dhuha    -  csh > 2 && csh < 4
        jam_sol = (String(waktu_dhu).substring(0,2)).toInt();
        mnt_sol = (String(waktu_dhu).substring(3,5)).toInt();

        satuanjam = jam_sol % 10; puluhanjam = jam_sol / 10;
        satuanmenit = mnt_sol % 10; puluhanmenit = mnt_sol / 10;
         
        display_number1 = dec[12]; display_number2 = dec[10];
        display_number3 = dec[puluhanjam]; display_number4 = dec[satuanjam];
        display_number5 = dec[puluhanmenit]; display_number6 = dec[satuanmenit];
         
        digitalWrite(latchPin, LOW);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number1);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number2);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number3);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number4);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number5);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number6);
        digitalWrite(latchPin, HIGH);

        digitalWrite(seco1, HIGH); 
        
//        Serial.print("d"); Serial.print(" "); Serial.print(":"); Serial.print(puluhanjam);
//        Serial.print(satuanjam); Serial.print(":"); Serial.print(puluhanmenit); Serial.println(satuanmenit);
      }
      else if (csh > 7 && csh < 10)  {   // dzuhur   -  csh > 3 && csh < 5
        jam_sol = (String(waktu_dzr).substring(0,2)).toInt();
        mnt_sol = (String(waktu_dzr).substring(3,5)).toInt();

        satuanjam = jam_sol % 10; puluhanjam = jam_sol / 10;
        satuanmenit = mnt_sol % 10; puluhanmenit = mnt_sol / 10;
         
        display_number1 = dec[2]; display_number2 = dec[10];
        display_number3 = dec[puluhanjam]; display_number4 = dec[satuanjam];
        display_number5 = dec[puluhanmenit]; display_number6 = dec[satuanmenit];
         
        digitalWrite(latchPin, LOW);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number1);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number2);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number3);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number4);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number5);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number6);
        digitalWrite(latchPin, HIGH);

        digitalWrite(seco1, HIGH);

//        Serial.print("z"); Serial.print(" "); Serial.print(":"); Serial.print(puluhanjam);
//        Serial.print(satuanjam); Serial.print(":"); Serial.print(puluhanmenit); Serial.println(satuanmenit);
      }
      else if (csh > 9 && csh < 12)  {   // ashar    -  csh > 4 && csh < 6
        jam_sol = (String(waktu_asr).substring(0,2)).toInt();
        mnt_sol = (String(waktu_asr).substring(3,5)).toInt();

        satuanjam = jam_sol % 10; puluhanjam = jam_sol / 10;
        satuanmenit = mnt_sol % 10; puluhanmenit = mnt_sol / 10;
         
        display_number1 = dec[13]; display_number2 = dec[10];
        display_number3 = dec[puluhanjam]; display_number4 = dec[satuanjam];
        display_number5 = dec[puluhanmenit]; display_number6 = dec[satuanmenit];
         
        digitalWrite(latchPin, LOW);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number1);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number2);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number3);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number4);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number5);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number6);
        digitalWrite(latchPin, HIGH);

        digitalWrite(seco1, HIGH); 

//        Serial.print("a"); Serial.print(" "); Serial.print(":"); Serial.print(puluhanjam);
//        Serial.print(satuanjam); Serial.print(":"); Serial.print(puluhanmenit); Serial.println(satuanmenit);
      }
      else if (csh > 11 && csh < 14) {   // maghrib  -  csh > 5 && csh < 7
        jam_sol = (String(waktu_mgr).substring(0,2)).toInt();
        mnt_sol = (String(waktu_mgr).substring(3,5)).toInt();

        satuanjam = jam_sol % 10; puluhanjam = jam_sol / 10;
        satuanmenit = mnt_sol % 10; puluhanmenit = mnt_sol / 10;
         
        display_number1 = dec[14]; display_number2 = dec[15];
        display_number3 = dec[puluhanjam]; display_number4 = dec[satuanjam];
        display_number5 = dec[puluhanmenit]; display_number6 = dec[satuanmenit];
         
        digitalWrite(latchPin, LOW);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number1);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number2);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number3);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number4);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number5);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number6);
        digitalWrite(latchPin, HIGH);

        digitalWrite(seco1, HIGH);

//        Serial.print("m"); Serial.print(" "); Serial.print(":"); Serial.print(puluhanjam);
//        Serial.print(satuanjam); Serial.print(":"); Serial.print(puluhanmenit); Serial.println(satuanmenit);
      }
      else if (csh > 13)             {   // isya     -  csh > 6
        jam_sol = (String(waktu_isy).substring(0,2)).toInt();
        mnt_sol = (String(waktu_isy).substring(3,5)).toInt();

        satuanjam = jam_sol % 10; puluhanjam = jam_sol / 10;
        satuanmenit = mnt_sol % 10; puluhanmenit = mnt_sol / 10;
         
        display_number1 = dec[1]; display_number2 = dec[10];
        display_number3 = dec[puluhanjam]; display_number4 = dec[satuanjam];
        display_number5 = dec[puluhanmenit]; display_number6 = dec[satuanmenit];
         
        digitalWrite(latchPin, LOW);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number1);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number2);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number3);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number4);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number5);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number6);
        digitalWrite(latchPin, HIGH);

        digitalWrite(seco1, HIGH);
        
//        Serial.print("I"); Serial.print(" "); Serial.print(":"); Serial.print(puluhanjam);
//        Serial.print(satuanjam); Serial.print(":"); Serial.print(puluhanmenit); Serial.println(satuanmenit);
      }
      csh++;
    }
    else
    {
      mode = 0;
      csh=0;
    }
  }
}

void tampilkan_waktu_masuk(){
  
  ambilwaktusholat();

  
  if (!evt_4 && (millis()-previousMillis_waktu_masuk) > 1000) {
  previousMillis_waktu_masuk = millis();

  if(dsh < 10){ // 10 Detik
      dsh++;
      if(wkt_msk_skrg==1){
        jam_sol = (String(waktu_ims).substring(0,2)).toInt();
        mnt_sol = (String(waktu_ims).substring(3,5)).toInt();  
        mp3_play (3); // Beep
      } else if (wkt_msk_skrg==2){
        jam_sol = (String(waktu_sbh).substring(0,2)).toInt();
        mnt_sol = (String(waktu_sbh).substring(3,5)).toInt();  
        if(dsh == 1){ mp3_play (2); } // Play Adzan Subuh 
      } else if (wkt_msk_skrg==3){
        jam_sol = (String(waktu_dzr).substring(0,2)).toInt();
        mnt_sol = (String(waktu_dzr).substring(3,5)).toInt(); 
        if(dsh == 1){ mp3_play (1); } // Play Adzan Biasa 
      } else if (wkt_msk_skrg==4){
        jam_sol = (String(waktu_asr).substring(0,2)).toInt();
        mnt_sol = (String(waktu_asr).substring(3,5)).toInt(); 
        if(dsh == 1){ mp3_play (1); } // Play Adzan Biasa  
      } else if (wkt_msk_skrg==5){
        jam_sol = (String(waktu_mgr).substring(0,2)).toInt();
        mnt_sol = (String(waktu_mgr).substring(3,5)).toInt();
        if(dsh == 1){ mp3_play (1); } // Play Adzan Biasa   
      } else if (wkt_msk_skrg==6){
        jam_sol = (String(waktu_isy).substring(0,2)).toInt();
        mnt_sol = (String(waktu_isy).substring(3,5)).toInt(); 
        if(dsh == 1){ mp3_play (1); } // Play Adzan Biasa  
      }

        satuanjam = jam_sol % 10; puluhanjam = jam_sol / 10;
        satuanmenit = mnt_sol % 10; puluhanmenit = mnt_sol / 10;
         
        display_number1 = dec[10]; display_number2 = dec[10];
        display_number3 = dec[puluhanjam]; display_number4 = dec[satuanjam];
        display_number5 = dec[puluhanmenit]; display_number6 = dec[satuanmenit];
         
        digitalWrite(latchPin, LOW);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number1);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number2);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number3);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number4);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number5);
        shiftOut(dataPin, clockPin, MSBFIRST, display_number6);
        digitalWrite(latchPin, HIGH);

        digitalWrite(seco1, HIGH); 

//        if (dsh % 2 == 0){
//          digitalWrite(buz,HIGH);
//        }
//        else
//        {
//          digitalWrite(buz,LOW);
//        }

//        Serial.println("Masuk Waktu...!!!");


    }
    else
    {
      dsh=0;
      mode = 0;
    }
  }
}

void tampilkan_edit_tanggal(){
  ambilwaktusholat();
  if (!evt_2 && (millis()-previousMillis_edit_tanggal) > 1000) {
  previousMillis_edit_tanggal = millis();
      
      thn = (String(tahun).substring(2,4)).toInt();
      
      satuantanggal = tanggal % 10;
      puluhantanggal = tanggal / 10;
       
      satuanbulan = bulan % 10;
      puluhanbulan = bulan / 10;

      satuantahun = thn % 10;
      puluhantahun = thn / 10;

      display_tanggal1 = dec[puluhantanggal];
      display_tanggal2 = dec[satuantanggal];
       
      display_tanggal3 = dec[puluhanbulan];
      display_tanggal4 = dec[satuanbulan];
       
      display_tanggal5 = dec[puluhantahun];
      display_tanggal6 = dec[satuantahun];
       
      digitalWrite(latchPin, LOW);
      shiftOut(dataPin, clockPin, MSBFIRST, display_tanggal1);
      shiftOut(dataPin, clockPin, MSBFIRST, display_tanggal2);
      shiftOut(dataPin, clockPin, MSBFIRST, display_tanggal3);
      shiftOut(dataPin, clockPin, MSBFIRST, display_tanggal4);
      shiftOut(dataPin, clockPin, MSBFIRST, display_tanggal5);
      shiftOut(dataPin, clockPin, MSBFIRST, display_tanggal6);
      digitalWrite(latchPin, HIGH);

      digitalWrite(seco1, LOW);

//      Serial.print(puluhantanggal);
//      Serial.print(satuantanggal);
//      Serial.print("-");
//      Serial.print(puluhanbulan);
//      Serial.print(satuanbulan);
//      Serial.print("-");
//      Serial.print(puluhantahun);
//      Serial.print(satuantahun);
//      Serial.println(" *");
      
    
  }
}

void ambilwaktusholat(){
  
  waktu();

  int hh_sol, mm_sol;
  
  txhh=Konversi(jam);
  txmm=Konversi(menit);
  cck = txhh + ":" + txmm; 
  
  SholahTimeCalulation sholat;
  sholat.coordinatSet(-6.287619, 106.821310, 7);
  sholat.dateSet(tahun,bulan,tanggal);
  sholat.ihtiyatiSet(2);
  sholat.calculate();
  
  for(int ws=0; ws<SholatCount;ws++){
    sholat.getTimePart(ws,hh_sol, mm_sol);
    String wkt_sol_sat =  String(hh_sol / 10) + String(hh_sol % 10) + ":" + String(mm_sol / 10) + String(mm_sol % 10);
    if(ws==0){ waktu_ims = wkt_sol_sat;} // jss = jss + waktu_ims;}
    if(ws==1){ waktu_sbh = wkt_sol_sat;} // jss = jss + " " + waktu_sbh;}
    if(ws==2){ waktu_tbt = wkt_sol_sat;} // jss = jss + " " + waktu_tbt;}
    if(ws==3){ waktu_dhu = wkt_sol_sat;} // jss = jss + " " + waktu_dhu;}
    if(ws==4){ waktu_dzr = wkt_sol_sat;} // jss = jss + " " + waktu_dzr;}
    if(ws==5){ waktu_asr = wkt_sol_sat;} // jss = jss + " " + waktu_asr;}
    if(ws==6){ waktu_mgr = wkt_sol_sat;} // jss = jss + " " + waktu_mgr;}
    if(ws==7){ waktu_isy = wkt_sol_sat;} // jss = jss + " " + waktu_isy;}
  }

      if (cck == waktu_ims && detik < 1){
        wkt_msk_skrg = 1;
        csh=0; bsh=0; ash=0; 
        mode=4;
      }     
      if (cck == waktu_sbh && detik < 1){
        wkt_msk_skrg = 2;
        csh=0;  bsh=0; ash=0; 
        mode=4;
      }
      if (cck == waktu_dzr && detik < 1){
        wkt_msk_skrg = 3;
        csh=0; bsh=0; ash=0; 
        mode=4;
      }    
      if (cck == waktu_asr && detik < 1){
        wkt_msk_skrg = 4;
        csh=0; bsh=0; ash=0;   
        mode=4;
      }
      if (cck == waktu_mgr && detik < 1){
        wkt_msk_skrg = 5;
        csh=0; bsh=0; ash=0; 
        mode=4;
      }
      if (cck == waktu_isy && detik < 1){
        wkt_msk_skrg = 6;
        csh=0; bsh=0; ash=0;
        mode=4;
      }
      if(menit == 0 && detik == 0){
        if (jam == 1 || jam == 13){ mp3_play (21); }
        if (jam == 2 || jam == 14){ mp3_play (22); }
        if (jam == 3 || jam == 15){ mp3_play (23); }
        if (jam == 4 || jam == 16){ mp3_play (24); }
        if (jam == 5 || jam == 17){ mp3_play (25); }
        if (jam == 6 || jam == 18){ mp3_play (26); }
        if (jam == 7 || jam == 19){ mp3_play (27); }
        if (jam == 8 || jam == 20){ mp3_play (28); }
        if (jam == 9 || jam == 21){ mp3_play (29); }
        if (jam == 10 || jam == 22){ mp3_play (30); }
        if (jam == 11 || jam == 23){ mp3_play (31); }
        if (jam == 12 || jam == 0){ mp3_play (32); }
        
        
        
      }
}

void waktu(){
  DateTime now = rtc.now();
  jam = now.hour();
  menit = now.minute();
  detik = now.second();
  tanggal = now.day();
  bulan = now.month();
  tahun = now.year();
  sekarang = now.dayOfTheWeek(); 
}

void beep(){
 
  for( int i = 0; i<1000;i++){
    digitalWrite(buz , HIGH);
    delayMicroseconds(100);
    digitalWrite(buz, LOW );
    delayMicroseconds(250);
  }
 
}

String Konversi(int sInput) {
  if (sInput < 10)
  { return"0" + String(sInput); }
  else
  { return String(sInput); }
}
